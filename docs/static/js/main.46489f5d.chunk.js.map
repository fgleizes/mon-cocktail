{"version":3,"sources":["components/Header.js","components/SearchBox.js","components/CocktailCard.js","components/DisplayCocktailList.js","services/api.js","services/search.js","components/SearchPage.js","components/CocktailView.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","SearchBox","props","state","query","filters","onSubmit","bind","event","preventDefault","this","handleSearch","Form","Row","Col","lg","InputGroup","Control","type","placeholder","value","onChange","setState","target","Append","Button","variant","Text","muted","numberOfResults","React","Component","CocktailCard","to","cocktail","id","name","replace","Figure","Caption","Image","width","rounded","src","previewURL","alt","title","DisplayCocktailList","cocktails","results","map","index","key","API_URL","makeSearch","URL","axios","get","then","response","data","drinks","drink","idDrink","strDrink","strDrinkThumb","catch","error","searchCocktailsByName","SearchPage","updateResultsFromURL","prevProps","location","match","params","queryResult","newURL","buildSearchURL","history","push","length","CocktailView","cocktailDetails","handleSearchById","drinkDetails","ingredients","i","strIngredient","strMeasure","quantity","imageURL","tags","strTags","category","strCategory","alcoholic","strAlcoholic","glass","strGlass","instructions","strInstructions","searchCocktailDetailsById","result","console","log","sm","span","md","order","xl","ingredient","withRouter","App","path","component","children","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.46489f5d.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\n\nexport default function Header() {\n  return (\n    <header className=\"header text-center text-dark py-3\">\n      <Container>\n        <h1>Cocktailon</h1>\n      </Container>\n    </header>\n  );\n}","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport { GoSearch } from 'react-icons/go';\n\nexport default class SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      filters: ''\n    }\n\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.props.handleSearch(this.state.query)\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className=\"search-box text-center py-3 pb-md-5 pt-lg-4\">\n          <h1 className=\"text-dark pb-4\">Search cocktails</h1>\n          <Form onSubmit={this.onSubmit}>\n            <Form.Row>\n              <Col lg={9} className=\"mx-auto\">\n                <InputGroup>\n                  <Form.Control\n                    className=\"text-center\"\n                    type=\"text\"\n                    placeholder=\"Enter the name of a cocktail\"\n                    value={this.state.query}\n                    onChange={(event) => this.setState({ query: event.target.value })}\n                  />\n\n                  <InputGroup.Append>\n                    <Button variant=\"dark\" type=\"submit\">\n                      <GoSearch />\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text muted>\n                  nombre de r√©sultats: {this.props.numberOfResults}\n                </Form.Text>\n              </Col>\n            </Form.Row>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport Figure from 'react-bootstrap/Figure';\nimport Button from 'react-bootstrap/Button';\n\nimport { MdLibraryAdd } from 'react-icons/md';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport default function CocktailCard(props) {\n\n  return (\n    <div className=\"cocktail-card d-flex flex-column\" >\n      <Link to={`/cocktail/${props.cocktail.id}-${props.cocktail.name.replace(/ /g, \"-\")}`}>\n        <Figure className=\"cocktail text-center w-100 mb-0\">\n          <Figure.Caption className=\"mb-2\">\n            {props.cocktail.name}\n          </Figure.Caption>\n          <div className=\"position-relative\">\n            <Figure.Image\n              width=\"100%\"\n              rounded\n              src={props.cocktail.previewURL} \n              alt={\"Photo d'un cocktail \" + props.cocktail.name} \n              title={props.cocktail.name}\n              className=\"mb-0\"\n            />\n            <div className=\"hover-effect\"></div>\n          </div>\n        </Figure>\n      </Link>\n      \n      <Button variant=\"success\">\n        <MdLibraryAdd /> Add to My Cocktails\n      </Button>\n      <Button variant=\"dark\">\n        <MdDeleteForever /> Remove\n      </Button>\n    </div>\n  );\n}","import React from 'react';\nimport CocktailCard from './CocktailCard'\n\nimport Container from 'react-bootstrap/Container';\n\n\nexport default function DisplayCocktailList(props) {\n  const cocktails = props.results\n\n  return (\n    <Container>\n      <div id=\"cocktail-list pb-5\">\n        <h2 className=\"text-dark\">Cocktails :</h2>\n\n        <div className=\"cocktail-list pt-3\">  \n          {cocktails.map((cocktail, index) => (\n            <CocktailCard\n              cocktail={cocktail}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n}","import axios from 'axios';\n\nconst API_URL = \"https://www.thecocktaildb.com/api/json/v1/1/\";\n\nexport function searchCocktailsByName(name) {\n    const URL = API_URL + \"search.php?s=\" + name\n\n    return axios.get(URL)\n        .then(function (response) {\n            // handle success\n            const drinks = response.data.drinks\n            return drinks\n        })\n        .then((drinks) => {\n            const results = drinks.map((drink) => {\n                const { idDrink, strDrink, strDrinkThumb } = drink;\n                return {\n                    id: idDrink,\n                    name: strDrink,\n                    previewURL: strDrinkThumb + '/preview'\n                }\n            })\n\n            return results\n        })\n        .catch((error) => {\n            return []\n        })\n}\n\nexport function searchCocktailDetailsById(id) {\n    const URL = API_URL + \"lookup.php?i=\" + id\n\n    return axios.get(URL)\n        .then(function (response) {\n            const drinkDetails = response.data.drinks[0]\n            return drinkDetails\n        })\n        .then((drinkDetails) => {\n            const ingredients = [];\n\n            let i = 1\n            while (drinkDetails[\"strIngredient\" + i]) {\n                const strIngredient = drinkDetails[\"strIngredient\" + i];\n                const strMeasure = drinkDetails[\"strMeasure\" + i];\n                ingredients.push({ name: strIngredient, quantity: strMeasure })\n                i++\n            }\n\n\n            const result = {\n                id: drinkDetails.idDrink,\n                name: drinkDetails.strDrink,\n                imageURL: drinkDetails.strDrinkThumb,\n                tags: drinkDetails.strTags,\n                category: drinkDetails.strCategory,\n                alcoholic: drinkDetails.strAlcoholic,\n                glass: drinkDetails.strGlass,\n                instructions: drinkDetails.strInstructions,\n                ingredients: ingredients\n            }\n\n            return result\n        })\n        .catch((error) => {\n            return \"error\"\n        })\n}","import { searchCocktailsByName } from './api'\n\nexport function makeSearch(query) {\n  const cocktailName = query;\n  return searchCocktailsByName(cocktailName)\n}","import React from 'react';\nimport SearchBox from './SearchBox'\nimport DisplayCocktailList from './DisplayCocktailList';\n\nimport { makeSearch } from '../services/search'\n\nexport default class SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { results: [] }\n    this.handleSearch = this.handleSearch.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateResultsFromURL();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location) {\n      // changed location; redo the search\n      this.updateResultsFromURL();\n    }\n  }\n\n  async updateResultsFromURL() {\n    // get parameters from URL\n    const query = this.props.match.params.query;\n\n    // update results using these parameters\n    const queryResult = await makeSearch(query);\n    this.setState({ results: queryResult })\n  }\n\n\n  buildSearchURL(query) {\n    return \"/search/\" + query;\n  }\n\n  handleSearch(query) {\n    // only update update URL\n    const newURL = this.buildSearchURL(query);\n    this.props.history.push(newURL);\n  }\n\n  render() {\n    return (\n      <section id=\"search-page\">\n        <SearchBox handleSearch={this.handleSearch} numberOfResults={this.state.results.length} />\n\n        {this.state.results.length > 0 && <DisplayCocktailList results={this.state.results} />}\n      </section>\n    );\n  }\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { searchCocktailDetailsById } from '../services/api';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Figure from 'react-bootstrap/Figure';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport { MdLibraryAdd } from 'react-icons/md';\nimport { MdDeleteForever } from 'react-icons/md';\n\n\nclass CocktailView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // urlParams: this.props.match.params,\n      cocktailDetails: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.handleSearchById(this.props.match.params.id)\n  }\n\n  handleSearchById(id) {\n    searchCocktailDetailsById(id)\n      .then((result) => {\n        this.setState({ cocktailDetails: result })\n      })\n  }\n  \n  render(){\n    const { name, imageURL, tags, alcoholic, category, glass, instructions, ingredients } = this.state.cocktailDetails\n\n    if (this.state.cocktailDetails === \"error\") return <Container><h3>Cocktail not found!</h3></Container>;\n\n    console.log(this.props)\n    \n    return (\n      <Container>\n        <div className=\"cocktail-details py-3 py-lg-5\">\n          {this.state.cocktailDetails &&\n            <Row>\n              <Col sm={{ span: 12 }} md={{ span: 6, order: 2 }} lg={5} xl={4}>\n                <Figure>\n                  <Figure.Image\n                    src={imageURL}\n                    alt={`Photo of a ${name} cocktail`}\n                    title={name}\n                  />\n\n                  {tags &&\n                    <Figure.Caption>\n                      {tags}\n                      {/* {tags ? tags.split(\",\").map((tag, index) => <a href=\"#\" key={index}>{tag}</a>) : \"\"} */}\n                    </Figure.Caption>\n                  }\n                </Figure>\n\n                <Button variant=\"success\" className=\"mb-4 mb-md-0\">\n                  <MdLibraryAdd /> Add to My Cocktails\n                </Button>\n\n                <Button variant=\"dark\" className=\"mb-4 mb-md-0\">\n                  <MdDeleteForever /> Remove from My Cocktails\n                </Button>\n              </Col>\n\n              <Col sm={{ span: 12 }} md={{ span: 6, order: 1 }} lg={7} xl={8} className=\"d-flex flex-column justify-content-between\">\n                <div>\n                  <h2>{name}</h2>\n                  <p>{instructions}</p>\n                </div>\n\n                <div className=\"ingredient-list\">\n                  <h3>Ingredients:</h3>\n                  {ingredients &&\n                    <ul>\n                      {ingredients.map((ingredient, index) => <li className=\"ingredient\" key={index}>{ingredient.name + \" \" + (ingredient.quantity ? ingredient.quantity : \"\")}</li>)}\n                    </ul>\n                  }\n                </div>\n\n                <div>\n                  <h4>Details:</h4>\n                  <ul className=\"m-md-0\">\n                    <li>{alcoholic}</li>\n                    <li>Category: {category}</li>\n                    <li>Glass: {glass}</li>\n                  </ul>\n                </div>\n              </Col>\n            </Row>\n          }\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(CocktailView);","import React from 'react';\nimport Header from './components/Header';\nimport SearchPage from './components/SearchPage';\nimport CocktailView from './components/CocktailView';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Router>\n        <Switch>\n          <Route path=\"/search/:query?\" component={SearchPage} />\n          <Route path=\"/cocktail/:id-:name\" children={<CocktailView />} />\n\n          {/* Default route */}\n          <Route path=\"/\">\n            <Redirect to=\"/search/\" />\n          </Route>\n        </Switch>\n      </Router>\n\n      {/* <SearchPage /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}